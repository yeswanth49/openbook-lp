name: Bundle Analysis

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  # Run on a weekly schedule to track bundle size over time
  schedule:
    - cron: "0 0 * * 0" # Every Sunday at midnight

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build and analyze bundle
        run: pnpm analyze
        
      - name: Upload bundle analysis to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze
          
      - name: Comment bundle size on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const clientStats = JSON.parse(fs.readFileSync('./.next/analyze/client.json', 'utf8'));
              const serverStats = JSON.parse(fs.readFileSync('./.next/analyze/server.json', 'utf8'));
              
              const formatBytes = (bytes) => {
                return bytes < 1024 
                  ? bytes + ' B'
                  : bytes < 1024 * 1024
                  ? (bytes / 1024).toFixed(2) + ' KB'
                  : (bytes / 1024 / 1024).toFixed(2) + ' MB';
              };
              
              const calculateTotalSize = (stats) => {
                return stats.assets.reduce((total, asset) => total + asset.size, 0);
              };
              
              const clientTotal = formatBytes(calculateTotalSize(clientStats));
              const serverTotal = formatBytes(calculateTotalSize(serverStats));
              
              const comment = `## Bundle Size Analysis
              
              | Type | Size |
              | ---- | ---- |
              | Client | ${clientTotal} |
              | Server | ${serverTotal} |
              | **Total** | **${formatBytes(calculateTotalSize(clientStats) + calculateTotalSize(serverStats))}** |
              
              <details>
              <summary>View Details</summary>
              
              ### Top 5 largest client bundles
              
              ${clientStats.assets
                .sort((a, b) => b.size - a.size)
                .slice(0, 5)
                .map(asset => `- ${asset.name}: ${formatBytes(asset.size)}`)
                .join('\n')}
              
              </details>
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error creating bundle analysis comment:', error);
            } 